name: Go
on: [push]
jobs:

  test:
    name: Build
    strategy:
      matrix:
        go: [1.14.2]
        image: ['centos:7']
    runs-on: ubuntu-latest
    container: ${{ matrix.image }}
    steps:
      - name: Install Dependencies
        run: |
          yum install -y openssl-devel systemd-devel gcc git
          curl -L https://dl.google.com/go/go${{ matrix.go }}.linux-amd64.tar.gz | tar xzf - --directory /usr/local
          export PATH="/root/go/bin:/usr/local/go/bin:${PATH}"
          GO111MODULE=off go get honnef.co/go/tools/cmd/staticcheck

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Git Info
        id: git
        run: |
          echo ::set-output name=SOURCE_NAME::${GITHUB_REF#refs/*/}
          echo ::set-output name=SOURCE_BRANCH::${GITHUB_REF#refs/heads/}
          echo ::set-output name=SOURCE_TAG::${GITHUB_REF#refs/tags/}

      - name: Test
        env:
          PATH: "/root/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/root/bin"
          GOFLAGS: '-mod=vendor'
        run: |
          go fmt $(go list ./... | grep -v /vendor/) | xargs -I {} -r /bin/sh -c "/bin/echo {} && exit 1"
          go vet $(go list ./... | grep -v /vendor/)
          staticcheck $(go list ./... | grep -v /vendor/)
          go test -v -race $(go list ./... | grep -v /vendor/)

      - name: Run GoReleaser
        if: startsWith(github.ref, 'refs/tags/') && (matrix.go == 1.14)
        uses: goreleaser/goreleaser-action@v1
        with:
          version: latest
          args: release
          # key: ${{ secrets.GPG_CODE_SIGN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
